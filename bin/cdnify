#!/usr/bin/env perl

#upload-asset http://uk.movies.yahoo.com/js/eu-ents-dom/eu-ents-dom.js

use strict;
use warnings;

use File::Basename;
use Getopt::Std;

my %opt;

# parse options
getopts('hp:i:', \%opt);
usage() if ($opt{'h'});

my $htdocs     = '/home/yahoo/htdocs.static/';
my %properties = (
    'movies'     => 'lib/eu/mv/',
    'tv'         => 'lib/eu/tv/',
    'games'      => 'lib/eu/gm/',
    'videogames' => 'lib/eu/vg/',
    'sims-bu'    => 'lib/eu/vg/sims-bu/',
    'christmas'  => 'xmas/',
    'music'      => 'lib/eu/mu/',
);

# require a property
my $destination_dir = "${htdocs}";
if ($opt{'p'}) {
    $destination_dir .= $properties{$opt{'p'}};
}
else {
    usage();
}



my $url = $ARGV[0];
my $asset_type;

if ( $url =~ /.js$/ ) {
    $asset_type = 'js';
}
elsif ( $url =~ /.css$/ ) {
    $asset_type = 'css';
} 
else {
    die "Can't handle that asset type. Soz.";
}

print "Asset type is ${asset_type}.\n";


my $yuicompressor_jar_path =  '/opt/yuicompressor/build/yuicompressor-2.4.2.jar';


my $date = `date +%Y%m%d`;
$date =~ s/\s+$//g;

if ($opt{'v'}) {
    $date .= '_' . $opt{'v'};
}

my $target_basename = basename( $url ); 


$target_basename =~ s/\.js$/m.js/;
$target_basename =~ s/\.css$/m.css/; 

print ${target_basename}; 

my $temp_path =  "/tmp/${target_basename}";

my $curl_command = "curl -o ${temp_path} $url";
system( $curl_command );

my $compress_command;

if ( $asset_type eq 'css' ) {
    $compress_command = "java -jar ${yuicompressor_jar_path} -v --charset iso-8859-1 -o ${temp_path} ${temp_path}";
}
elsif ( $asset_type eq 'js' ) {
    $compress_command = "java -jar ${yuicompressor_jar_path} -v --charset iso-8859-1 -o ${temp_path} --preserve-semi ${temp_path}";
}

system( $compress_command );

my $scp_command = "scp ${temp_path} html.yahoo.com:";
print "Running: ${scp_command}\n";
system( $scp_command );   
my $ssh_cp_command = "ssh html.yahoo.com sudo -u yahoo cp /homes/stevema/${target_basename} ${destination_dir}";
print "Running: ${ssh_cp_command}\n";
system( $ssh_cp_command );

print <<WARN;
******************************************************************************

Now go run `gmake` on html.yahoo.com!

******************************************************************************
WARN

sub usage {
    print <<EOF;
cdnify -p <product> [-i <version>] <filename>

    -p <product>    which product group to use
    
    -i <version>    an optional version number to append to the filename
    
    <filename>
                    file to upload to the CDN
EOF
    exit;
}